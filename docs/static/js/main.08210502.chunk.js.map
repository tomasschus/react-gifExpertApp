{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","categorias","setCategorias","className","id","placeholder","onClick","nuevaCategoria","document","getElementById","value","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","title","images","downsized_medium","useFetchGifs","useState","loading","state","setState","useEffect","then","imgs","GifGridItem","image","src","alt","GifGrid","GifExpertApp","ReactDOM","render"],"mappings":"2MA0BeA,EAvBK,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cASjC,OACE,sBAAKC,UAAU,SAAf,UACE,uBAAOC,GAAG,iBAAiBC,YAAY,oBACvC,sBACA,wBAAQF,UAAU,eAAeG,QAZnB,WAChB,IAAMC,EAAiBC,SAASC,eAAe,kBAAkBC,MAC1C,KAAnBH,GACFL,EAAc,CAACK,GAAF,mBAAqBN,KAEpCO,SAASC,eAAe,kBAAkBC,MAAQ,IAOhD,wB,uBChBOC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UACpDH,GAFmB,+DAIFI,MAAMF,GAJJ,cAIfG,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLlB,GAAIkB,EAAIlB,GACRmB,MAAOD,EAAIC,MACXT,IAAG,UAAEQ,EAAIE,cAAN,aAAE,EAAYC,iBAAiBX,QAXjB,kBAcdM,GAdc,4CAAH,sDCkBLM,EAfM,SAACd,GACpB,MAA0Be,mBAAS,CACjCR,KAAM,GACNS,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAWA,OANAC,qBAAU,WACRpB,EAAQC,GAAUoB,MAAK,SAACC,GACtBH,EAAS,CAAEX,KAAMc,EAAML,SAAS,SAEjC,CAAChB,IAEGiB,GCbIK,EAAc,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC5B,OACE,sBAAKhC,UAAU,yCAAf,UACE,4BAAIgC,EAAMZ,QACV,qBAAKa,IAAKD,EAAMrB,IAAKuB,IAAKF,EAAMZ,YCFzBe,EAAU,SAAC,GAAkB,IAAhB1B,EAAe,EAAfA,SACxB,EAA0Bc,EAAad,GAA/BO,EAAR,EAAQA,KAAR,EAAcS,QAEd,OACE,sBAAKzB,UAAU,YAAf,UACE,+BAAKS,EAAL,OADF,IACuB,uBACpBO,EAAKE,KACF,SAACc,GAAD,OAAa,cAAC,EAAD,CAA4BA,MAAOA,GAAjBA,EAAM/B,WCUhCmC,MAjBf,WACE,MAAoCZ,mBAAS,IAA7C,mBAAO1B,EAAP,KAAmBC,EAAnB,KAEA,OACE,qCACE,8CACA,uBACA,cAAC,EAAD,CAAaD,WAAYA,EAAYC,cAAeA,IACpD,6BACGD,EAAWoB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YCTxB4B,IAASC,OACP,cAAC,EAAD,IACAjC,SAASC,eAAe,W","file":"static/js/main.08210502.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddCategory = ({ categorias, setCategorias }) => {\r\n  const handleAdd = () => {\r\n    const nuevaCategoria = document.getElementById(\"nuevaCategoria\").value;\r\n    if (nuevaCategoria !== \"\") {\r\n      setCategorias([nuevaCategoria, ...categorias]);\r\n    }\r\n    document.getElementById(\"nuevaCategoria\").value = \"\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"center\">\r\n      <input id=\"nuevaCategoria\" placeholder=\"Buscar imagen..\"></input>\r\n      <p></p>\r\n      <button className=\"buttonSearch\" onClick={handleAdd}>Buscar</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  categorias: PropTypes.array.isRequired,\r\n  setCategorias: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","export const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=10&api_key=za4t4GGGXiMP2wDOgELgKMze1Fpgn1yv`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n  return gifs;\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nconst useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      setState({ data: imgs, loading: false });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n\r\nexport default useFetchGifs;\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ image }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <p>{image.title}</p>\r\n      <img src={image.url} alt={image.title} />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport useFetchGifs from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <div className=\"card-grid\">\r\n      <h3>{category} </h3> <br />\r\n      {data.map(\r\n          (image) => ( <GifGridItem key={image.id} image={image} /> )\r\n      )\r\n      }\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory.js\";\r\nimport { GifGrid } from \"./components/GifGrid.js\";\r\n\r\nfunction GifExpertApp() {\r\n  const [categorias, setCategorias] = useState([]);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <hr />\r\n      <AddCategory categorias={categorias} setCategorias={setCategorias} />\r\n      <ol>\r\n        {categorias.map((category) => (\r\n          <GifGrid key={category} category={category} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp.js';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}